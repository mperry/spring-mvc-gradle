/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'MarkPerry' at '6/12/13 9:06 AM' with Gradle 1.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'jetty'

defaultTasks "build"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'org.codehaus.groovy:groovy-all:2.2.1'
//	compile 'org.springframework:spring-webmvc:3.2.5.RELEASE'

//	runtime 'com.fasterxml.jackson.core:jackson-core:2.2.2'
//	runtime 'com.fasterxml.jackson.core:jackson-databind:2.2.2'

	compile 'org.springframework:spring-core:3.2.3.RELEASE'
	compile 'org.springframework:spring-webmvc:3.2.3.RELEASE'
	compile 'com.jayway.jsonpath:json-path:0.8.1'

	compile 'org.slf4j:slf4j-api:1.7.5'
	runtime 'org.slf4j:slf4j-jdk14:1.7.5'
	runtime 'com.fasterxml.jackson.core:jackson-core:2.2.2'
	runtime 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
	runtime 'javax.xml.bind:jaxb-api:2.2.9'

//	provided 'javax.servlet:javax.servlet-api:3.0.1'

	// Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}

[jettyRun, jettyRunWar,jettyStop]*.with {
	//other configs

	webDefaultXml = file("${project.webAppDir}/WEB-INF/jetty-webdefault.xml")
}
